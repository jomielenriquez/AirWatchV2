@model AirWatch.Models.AppModel
@{
    ViewBag.Title = "Home Page";
}
@*<script src="https://cdn.canvasjs.com/canvasjs.min.js"></script>*@
<div class="bs-docs-section">
    <div class="row">
        <div class="col-lg-4">
            <div class="card border-dark mb-4">
                <div class="card-header">Humidity</div>
                <div class="card-body">
                    <div id="humidityChart" style="height: 370px; "></div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card border-dark mb-4">
                <div class="card-header">Ammonia</div>
                <div class="card-body">
                    @*<canvas id="ammoniaChart"></canvas>*@
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card border-dark mb-4">
                <div class="card-header">Sulfur dioxide</div>
                <div class="card-body">
                    @*<canvas width="800" height="600" id="SulfurChart"></canvas>*@
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-4">
            <div class="card border-dark mb-4">
                <div class="card-header">Temperature</div>
                <div class="card-body">
                    @*<canvas width="800" height="600" id="temperatureChart"></canvas>*@
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card border-dark mb-4">
                <div class="card-header">Carbon Monoxide</div>
                <div class="card-body">
                    @*<canvas width="800" height="600" id="carbonChart"></canvas>*@
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card border-dark mb-4">
                <div class="card-header">Nitrogen Oxide</div>
                <div class="card-body">
                    @*<canvas width="800" height="600" id="NitrogenChart"></canvas>*@
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.canvasjs.com/canvasjs.min.js"></script>
<script>
    window.onload = function () {

        var dataPoints1 = [];
        //var dataPoints2 = [];

        var chart = new CanvasJS.Chart("humidityChart", {
            zoomEnabled: true,
            title: {
                //text: "Share Value of Two Companies"  // remove title
            },
            axisX: {
                title: "chart updates every 3 secs"
            },
            axisY: {
                //prefix: "$"
                title: " Humidity"
            },
            toolTip: {
                shared: true
            },
            legend: {
                cursor: "pointer",
                verticalAlign: "top",
                fontSize: 22,
                fontColor: "dimGrey",
                itemclick: toggleDataSeries
            },
            data: [
                {
                    type: "line",
                    xValueType: "dateTime",
                    yValueFormatString: "####.00",
                    xValueFormatString: "hh:mm:ss TT",
                    showInLegend: true,
                    name: "Humidity",
                    dataPoints: dataPoints1,
                    color: "green"
                },
                //{
                //    type: "line",
                //    xValueType: "dateTime",
                //    yValueFormatString: "$####.00",
                //    showInLegend: true,
                //    name: "Company B",
                //    dataPoints: dataPoints2
                //}
            ]
        });

        function toggleDataSeries(e) {
            if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                e.dataSeries.visible = false;
            }
            else {
                e.dataSeries.visible = true;
            }
            chart.render();
        }

        var updateInterval = 3000;
        // initial value
        var yValue1 = 600;
        var yValue2 = 605;

        var time = new Date;
        // starting at 9.30 am
        time.setHours(9);
        time.setMinutes(30);
        time.setSeconds(00);
        time.setMilliseconds(00);

        function updateChart(count) {
            count = count || 1;
            var deltaY1, deltaY2;
            for (var i = 0; i < count; i++) {
                time.setTime(time.getTime() + updateInterval);
                deltaY1 = .5 + Math.random() * (-.5 - .5);
                //deltaY2 = .5 + Math.random() * (-.5 - .5);

                // adding random value and rounding it to two digits. 
                yValue1 = Math.round((yValue1 + deltaY1) * 100) / 100;
                //yValue2 = Math.round((yValue2 + deltaY2) * 100) / 100;

                // pushing the new values
                dataPoints1.push({
                    x: time.getTime(),
                    y: yValue1
                });
                //dataPoints2.push({
                //    x: time.getTime(),
                //    y: yValue2
                //});
            }

            // updating legend text with  updated with y Value 
            chart.options.data[0].legendText = " Humidity " + yValue1;
            //chart.options.data[1].legendText = " Company B  $" + yValue2;
            chart.render();
        }
        // generates first set of dataPoints 
        updateChart(100);
        setInterval(function () { updateChart() }, updateInterval);

        function getdata() {
            $.ajax({
                url: "/Home/GetTempData", // Replace with your API endpoint
                type: "GET", // Use GET, POST, PUT, or DELETE depending on your API
                dataType: "json",
                success: function (data) {
                    // Update the page with the response data
                    console.log("API Response: " + data);
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            });
        }
        setInterval(function () { getdata() }, 1000);
    }
</script>