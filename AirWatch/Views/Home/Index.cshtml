@model AirWatch.Models.AppModel
@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*<script src="https://cdn.canvasjs.com/canvasjs.min.js"></script>*@
<div class="bs-docs-section">
    <div class="row">
        <div class="col-lg-4">
            <div class="card border-dark mb-4">
                <div class="card-header">Humidity</div>
                <div class="card-body">
                    <div id="humidityChart" style="height: 370px; "></div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card border-dark mb-4">
                <div class="card-header">Ammonia</div>
                <div class="card-body">
                    <div id="ammoniaChart" style="height: 370px; "></div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card border-dark mb-4">
                <div class="card-header">Sulfur dioxide</div>
                <div class="card-body">
                    <div id="sulfurChart" style="height: 370px; "></div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-4">
            <div class="card border-dark mb-4">
                <div class="card-header">Temperature</div>
                <div class="card-body">
                    <div id="temperatureChart" style="height: 370px; "></div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card border-dark mb-4">
                <div class="card-header">Carbon Monoxide</div>
                <div class="card-body">
                    <div id="carbonChart" style="height: 370px; "></div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card border-dark mb-4">
                <div class="card-header">Nitrogen Oxide</div>
                <div class="card-body">
                    <div id="NitrogenChart" style="height: 370px; "></div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.canvasjs.com/canvasjs.min.js"></script>
<script>
    var currentEDID = 0;
    window.onload = function () {
        var updateInterval = 5;

        var hummidityDataPoints1 = [];
        var ammoniaDataPoints1 = [];
        var sulfurDataPoints1 = [];
        var temperatureDataPoints1 = [];
        var carbonDataPoints1 = [];
        var nitrogenDataPoints1 = [];
        //var dataPoints2 = [];

        var chart = new CanvasJS.Chart("humidityChart", {
            zoomEnabled: true,
            title: {
                //text: "Share Value of Two Companies"  // remove title
            },
            axisX: {
                title: "chart updates every " + updateInterval + " secs"
            },
            axisY: {
                //prefix: "$"
                title: " Humidity"
            },
            toolTip: {
                shared: true
            },
            legend: {
                cursor: "pointer",
                verticalAlign: "top",
                fontSize: 22,
                fontColor: "dimGrey",
                itemclick: toggleDataSeries
            },
            data: [
                {
                    type: "line",
                    xValueType: "dateTime",
                    yValueFormatString: "####.00",
                    xValueFormatString: "hh:mm:ss TT",
                    showInLegend: true,
                    name: "Humidity",
                    dataPoints: hummidityDataPoints1,
                    color: "green"
                },
                //{
                //    type: "line",
                //    xValueType: "dateTime",
                //    yValueFormatString: "$####.00",
                //    showInLegend: true,
                //    name: "Company B",
                //    dataPoints: dataPoints2
                //}
            ]
        });

        var ammoniaChart = new CanvasJS.Chart("ammoniaChart", {
            zoomEnabled: true,
            title: {
            },
            axisX: {
                title: "chart updates every " + updateInterval + " secs"
            },
            axisY: {
                title: " Ammonia"
            },
            toolTip: {
                shared: true
            },
            legend: {
                cursor: "pointer",
                verticalAlign: "top",
                fontSize: 22,
                fontColor: "dimGrey",
                itemclick: toggleDataSeries
            },
            data: [
                {
                    type: "line",
                    xValueType: "dateTime",
                    yValueFormatString: "####.00",
                    xValueFormatString: "hh:mm:ss TT",
                    showInLegend: true,
                    name: "Ammonia",
                    dataPoints: ammoniaDataPoints1,
                    color: "green"
                },
            ]
        });

        var sulfurChart = new CanvasJS.Chart("sulfurChart", {
            zoomEnabled: true,
            title: {
            },
            axisX: {
                title: "chart updates every " + updateInterval + " secs"
            },
            axisY: {
                title: " SULFUR DIOXIDE"
            },
            toolTip: {
                shared: true
            },
            legend: {
                cursor: "pointer",
                verticalAlign: "top",
                fontSize: 22,
                fontColor: "dimGrey",
                itemclick: toggleDataSeries
            },
            data: [
                {
                    type: "line",
                    xValueType: "dateTime",
                    yValueFormatString: "####.00",
                    xValueFormatString: "hh:mm:ss TT",
                    showInLegend: true,
                    name: "Sulfur Dioxide",
                    dataPoints: sulfurDataPoints1,
                    color: "green"
                },
            ]
        });

        var temperatureChart = new CanvasJS.Chart("temperatureChart", {
            zoomEnabled: true,
            title: {
            },
            axisX: {
                title: "chart updates every " + updateInterval + " secs"
            },
            axisY: {
                title: " Ammonia"
            },
            toolTip: {
                shared: true
            },
            legend: {
                cursor: "pointer",
                verticalAlign: "top",
                fontSize: 22,
                fontColor: "dimGrey",
                itemclick: toggleDataSeries
            },
            data: [
                {
                    type: "line",
                    xValueType: "dateTime",
                    yValueFormatString: "####.00",
                    xValueFormatString: "hh:mm:ss TT",
                    showInLegend: true,
                    name: "Temperature",
                    dataPoints: temperatureDataPoints1,
                    color: "green"
                },
            ]
        });

        var carbonChart = new CanvasJS.Chart("carbonChart", {
            zoomEnabled: true,
            title: {
            },
            axisX: {
                title: "chart updates every " + updateInterval + " secs"
            },
            axisY: {
                title: " Ammonia"
            },
            toolTip: {
                shared: true
            },
            legend: {
                cursor: "pointer",
                verticalAlign: "top",
                fontSize: 22,
                fontColor: "dimGrey",
                itemclick: toggleDataSeries
            },
            data: [
                {
                    type: "line",
                    xValueType: "dateTime",
                    yValueFormatString: "####.00",
                    xValueFormatString: "hh:mm:ss TT",
                    showInLegend: true,
                    name: "Carbon Monoxide",
                    dataPoints: carbonDataPoints1,
                    color: "green"
                },
            ]
        });

        var NitrogenChart = new CanvasJS.Chart("NitrogenChart", {
            zoomEnabled: true,
            title: {
            },
            axisX: {
                title: "chart updates every " + updateInterval + " secs"
            },
            axisY: {
                title: " Ammonia"
            },
            toolTip: {
                shared: true
            },
            legend: {
                cursor: "pointer",
                verticalAlign: "top",
                fontSize: 22,
                fontColor: "dimGrey",
                itemclick: toggleDataSeries
            },
            data: [
                {
                    type: "line",
                    xValueType: "dateTime",
                    yValueFormatString: "####.00",
                    xValueFormatString: "hh:mm:ss TT",
                    showInLegend: true,
                    name: "Nitrogen Oxide",
                    dataPoints: nitrogenDataPoints1,
                    color: "green"
                },
            ]
        });

        function toggleDataSeries(e) {
            if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                e.dataSeries.visible = false;
            }
            else {
                e.dataSeries.visible = true;
            }
            chart.render();
        }

        //var updateInterval = 3000;
        //// initial value
        //var yValue1 = 600;
        //var yValue2 = 605;

        //var time = new Date;
        //// starting at 9.30 am
        //time.setHours(9);
        //time.setMinutes(30);
        //time.setSeconds(00);
        //time.setMilliseconds(00);

        //function updateChart(count) {
        //    count = count || 1;
        //    var deltaY1, deltaY2;
        //    for (var i = 0; i < count; i++) {
        //        time.setTime(time.getTime() + updateInterval);
        //        deltaY1 = .5 + Math.random() * (-.5 - .5);
        //        //deltaY2 = .5 + Math.random() * (-.5 - .5);

        //        // adding random value and rounding it to two digits.
        //        yValue1 = Math.round((yValue1 + deltaY1) * 100) / 100;
        //        //yValue2 = Math.round((yValue2 + deltaY2) * 100) / 100;

        //        // pushing the new values
        //        dataPoints1.push({
        //            x: time.getTime(),
        //            y: yValue1
        //        });
        //        //dataPoints2.push({
        //        //    x: time.getTime(),
        //        //    y: yValue2
        //        //});
        //    }

        //    // updating legend text with  updated with y Value
        //    chart.options.data[0].legendText = " Humidity " + yValue1;
        //    //chart.options.data[1].legendText = " Company B  $" + yValue2;
        //    chart.render();
        //}
        // generates first set of dataPoints
        //updateChart(100);
        //setInterval(function () { updateChart() }, updateInterval);

        function getdata() {
            $.ajax({
                url: "/Data/GetData", // API endpoint
                type: "GET",
                dataType: "json",
                success: function (data) {
                    var prevEDID = currentEDID;
                    currentEDID = data.EDID;
                    console.log(currentEDID);
                    if (currentEDID > prevEDID) {
                        RenderChartData(data);
                    }
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            });
        }

        function microsoftJsonDateToJsDate(msJsonDate) {
            // Extract the numeric part (ticks) from the string
            const match = /\/Date\((\d+)\)\//.exec(msJsonDate);
            if (!match || match.length < 2) {
                throw new Error('Invalid Microsoft JSON Date format.');
            }

            // Convert the ticks to milliseconds
            const ticks = parseInt(match[1], 10);

            // Create a JavaScript Date object using the milliseconds (interpreted as UTC)
            const jsDateUtc = new Date(ticks);

            return jsDateUtc;
        }

        function RenderChartData(data) {
            // Convert Date to UTC
            var ex = microsoftJsonDateToJsDate(data.CREATEDDATE);

            /////////////////////////////////////////
            //       UPDATE HUMIDITY               //
            /////////////////////////////////////////
            hummidityDataPoints1.push({
                x: ex,
                y: data.HUMIDITY
            });
            chart.options.data[0].legendText = " Humidity " + data.HUMIDITY;
            chart.render();

            /////////////////////////////////////////
            //       UPDATE AMMONIA                //
            /////////////////////////////////////////
            ammoniaDataPoints1.push({
                x: ex,
                y: data.AMMONIA
            });
            ammoniaChart.options.data[0].legendText = " Ammonia " + data.AMMONIA;
            ammoniaChart.render();

            /////////////////////////////////////////
            //       UPDATE SULFUR                 //
            /////////////////////////////////////////
            sulfurDataPoints1.push({
                x: ex,
                y: data.SULFURDIOXICE
            });
            sulfurChart.options.data[0].legendText = " Sulfur " + data.SULFURDIOXICE;
            sulfurChart.render();

            /////////////////////////////////////////
            //       UPDATE TEMPERATURE            //
            /////////////////////////////////////////
            temperatureDataPoints1.push({
                x: ex,
                y: data.TEMPERATURE
            });
            temperatureChart.options.data[0].legendText = " Temperature " + data.TEMPERATURE;
            temperatureChart.render();

            /////////////////////////////////////////
            //       UPDATE CARBON                 //
            /////////////////////////////////////////
            carbonDataPoints1.push({
                x: ex,
                y: data.CARBONMONOXIDE
            });
            carbonChart.options.data[0].legendText = " Carbon Monoxide " + data.CARBONMONOXIDE;
            carbonChart.render();

            /////////////////////////////////////////
            //       UPDATE NITROGEN               //
            /////////////////////////////////////////
            nitrogenDataPoints1.push({
                x: ex,
                y: data.NITROGENOXIDE
            });
            NitrogenChart.options.data[0].legendText = " Nitrogen Oxide " + data.NITROGENOXIDE;
            NitrogenChart.render();
        }

        $.ajax({
            url: "/Data/GetOneHundred", // API endpoint
            type: "GET",
            dataType: "json",
            success: function (data) {
                // Convert Date to UTC
                console.log(data);
                if (data.length == 0) {
                    console.log("no data");
                    setInterval(function () { getdata() }, updateInterval * 1000);
                }
                else {
                    data.forEach(function (values) {
                        RenderChartData(values);
                    });
                    setInterval(function () { getdata() }, updateInterval * 1000);

                }

            },
            error: function (error) {
                console.error("Error:", error);
            }
        });

    }
</script>